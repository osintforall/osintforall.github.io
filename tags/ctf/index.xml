<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ctf on Osint For All</title>
    <link>/tags/ctf/</link>
    <description>Recent content in ctf on Osint For All</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/tags/ctf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OPSEC For OSINT CTFs</title>
      <link>/articles/opsec/opsec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/articles/opsec/opsec/</guid>
      <description>CTFs (Capture The Flags) are a great way to enhance your skills. Whether it‚Äôs information security or Open Source Intelligence based CTFs, at the end of the day, they improve your problem solving abilities, and also, they are fun!
I started this tradition of making Twitter threads during TraceLabs‚Äôs CTF about OPSEC, especially focusing on judges using LOW END COMPUTERS. So I thought why not make a blog post about it so that everyone could benefit.</description>
      <content>&lt;p&gt;CTFs (Capture The Flags) are a great way to enhance your skills. Whether it‚Äôs information security or Open Source Intelligence based CTFs, at the end of the day, they improve your problem solving abilities, and also, they are fun!&lt;/p&gt;
&lt;p&gt;I started this tradition of making Twitter threads during TraceLabs‚Äôs CTF about OPSEC, especially focusing on judges using LOW END COMPUTERS. So I thought why not make a blog post about it so that everyone could benefit. I‚Äôm also going to add some extra insights which I couldn‚Äôt cover in those threads.&lt;/p&gt;
&lt;h1 id=&#34;method-1&#34;&gt;Method 1&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Create a separate browser profile and delete it later. In Firefox based browsers, go to about:profiles and create one. In Chrome based browsers, you can find an option. And use User-Agent Switcher. Or you can also use Tor Browser(with/without a separate profile). Avoid installing addons or changing user agent strings while using Tor browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/articles/opsec/1.jpeg&#34; alt=&#34;1&#34;&gt;
&lt;img src=&#34;/articles/opsec/2.jpeg&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use browser based VPNs within the profile. (Not recommending any VPN in particular, choose one by researching a bit on the web, or probably the ones with good ratings, maximum users and past records)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If available use ‚Äòtrustable VPN of your choice‚Äô on your main machine, along with browser vpn. A better way to make sure that your VPN is not leaking DNS is to test at - &lt;a href=&#34;http://dnsleaktest.com&#34;&gt;http://dnsleaktest.com&lt;/a&gt; after setting up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use proxy chains (sudo apt install proxychains - for Debian based distros) and add public proxies down below in proxychains.conf, along with VPNs or use Tor proxy. Some privacy focused GNU/Linux distros, provide ‚Äòanonymous mode‚Äô or ‚Äòtor mode‚Äô, use them.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/articles/opsec/3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;method-2&#34;&gt;Method 2&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Use Live/Persistent Bootable Pendrives&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Live bootable pendrive runs live on your device, that means, when you pull the pendrive out of your system, all your data will be gone. To make it effective, combine it with the instructions from &lt;strong&gt;Method 1.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On persistent bootable pendrives, you can allocate some space for storage and also encrypt that space. You can save your data and settings on persistent pendrives. When you pull out the pendrive from the system, nothing will be stored on your system‚Äôs hard drive.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended Operating Systems For Bootable Pendrives&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://tails.boum.org/&#34;&gt;Tails&lt;/a&gt; (highly recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digi77.com/linux-kodachi/&#34;&gt;Kodachi OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tsurugi-linux.org/&#34;&gt;Tsurugi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.parrotsec.org/&#34;&gt;Parrot OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kali.org/&#34;&gt;Kali&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;faq&#34;&gt;FAQ&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;What if I can‚Äôt create sock puppet accounts due to territorial restrictions and I can‚Äôt/don‚Äôt want to spend money on buying burners or temporary sim cards?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ans:&lt;/strong&gt; If the CTF is designed in a way, such that, you only need to verify the details of contestants&#39; submissions, then, you don‚Äôt need sock puppet accounts; simply follow the instructions from &lt;strong&gt;Method 1&lt;/strong&gt; or use the &lt;strong&gt;Tor browser&lt;/strong&gt; to do so. This applies only if the submissions are from social media platforms such as Facebook, Twitter, Instagram, LinkedIn, and so on; where you can view the content from a ‚Äúshared link‚Äù unless it‚Äôs public. If any of the social media sites require you to &lt;strong&gt;login/signup&lt;/strong&gt; for a second post from the same window, simply right-click on the link and open it in a &lt;strong&gt;private window&lt;/strong&gt;, which will fool the link into thinking that you are a different person/session accessing the link.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some Privacy Addons.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User Agent Switcher&lt;/li&gt;
&lt;li&gt;Ublock Origin&lt;/li&gt;
&lt;li&gt;Privacy Badger&lt;/li&gt;
&lt;li&gt;Decentraleyes&lt;/li&gt;
&lt;li&gt;Disconnect&lt;/li&gt;
&lt;li&gt;Ghostery&lt;/li&gt;
&lt;li&gt;Facebook Container&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Other Useful Addons&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firefox Multi-Account Containers&lt;/li&gt;
&lt;li&gt;Session Box&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can disable &lt;em&gt;Decentraleyes&lt;/em&gt; and &lt;em&gt;Disconnect&lt;/em&gt;, if they block the javascript from the website that you want to access.&lt;/p&gt;
&lt;p&gt;That‚Äôs all I got for today. This post will probably be updated once in a while. Keep learning.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Sarah&#39;s Case Is Still Unsolved!</title>
      <link>/articles/unsolved1/unsolved1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/articles/unsolved1/unsolved1/</guid>
      <description>It&amp;rsquo;s been a month, and no one solved the case! Some came near, but went too far. Isn&amp;rsquo;t that the beauty of The Unsolvable CTF?
As you have not solved the CTF yet (will you ever?üòà), so here are some tips to approach the case.
First of all, ask yourself what have you got? A case file with 90 words and two images. That means, you have limited information and you have to start your investigation from there.</description>
      <content>&lt;p&gt;It&amp;rsquo;s been a month, and no one solved the case! Some came near, but went too far. Isn&amp;rsquo;t that the beauty of &lt;a href=&#34;https://osintforall.in/ctf/&#34;&gt;&lt;strong&gt;The Unsolvable CTF&lt;/strong&gt;&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;As you have not solved the CTF yet (will you ever?üòà), so here are some tips to approach the case.&lt;/p&gt;
&lt;p&gt;First of all, ask yourself what have you got? A case file with 90 words and two images. That means, you have limited information and you have to start your investigation from there. The case file establishes that the person has expertise in Linguistics and Philosophy, that&amp;rsquo;s your &lt;em&gt;primary information&lt;/em&gt;. After that, the words are subtle and cryptic in their own rights, so, probably you can get the answers after reading further. In our case, that&amp;rsquo;s nothing but the &lt;a href=&#34;https://osintforall.in/ctf/case1/1/&#34;&gt;images&lt;/a&gt;, they look interesting, don&amp;rsquo;t they?&lt;/p&gt;
&lt;p&gt;Now, you as an investigator need not to be an linguistic expert (even if you are, that&amp;rsquo;s great!), but here&amp;rsquo;s a text that you do not understand, what could you do? Translate? Sounds fair, but, if you had followed our &lt;a href=&#34;https://twitter.com/AllForOsint&#34;&gt;Twitter&lt;/a&gt; or joined our &lt;a href=&#34;https://discord.gg/2NN87XHc9A&#34;&gt;Discord&lt;/a&gt;, you would have known that I had said that &amp;ldquo;There&amp;rsquo;s nothing much to do with translation&amp;rdquo;, but, many of you got in the race of translating, finding historical references from N number of professors and so on. Well, I&amp;rsquo;m a lifelong history student, but did you really think that I&amp;rsquo;m going to create a CTF based on my biases? You got me wrong this time. Anyway, moving on, if not translation, what can you do? Comparison? Wow, wait what? With what? The answer is &amp;ldquo;Lorem Ipsum&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;You don‚Äôt have to get into the void of historical references or if some professor said something. Instead, ‚ÄúJust Google It!!‚Äù .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/unsolved1/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;You‚Äôll get the organic results that generate ‚ÄúLorem Ipsum‚Äù for you, as you already have the text written on the images, you could use something like &lt;a href=&#34;https://www.onlineocr.net/&#34;&gt;online OCR&lt;/a&gt; to convert image to text or manually compare the Lorem generated text with the original. Then see the similarities. And you‚Äôll find some discrepancies and those discrepancies are some names, which have already been cracked from our community members, Mary &amp;amp; Maas. How did they do that? Well, they used lots of their brain power to translate with different translators. And those translators did translate the text with some discrepancies, as a result, discrepancies could not translate the names to their epistemological origins and that‚Äôs how they got the names.&lt;/p&gt;
&lt;p&gt;I‚Äôll leave you here, and let me see if you can do something with those names and solve the case. If you want the names, an investigative partner or the community, join our &lt;a href=&#34;https://discord.gg/2NN87XHc9A&#34;&gt;Discord server&lt;/a&gt; and participate in the discussions at #unsolvable-ctf. Good luck.&lt;/p&gt;
&lt;p&gt;And also subscribe to our YouTube channel - &lt;a href=&#34;https://www.youtube.com/@osintforall&#34;&gt;https://www.youtube.com/@osintforall&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Steganographic Tools For Beginners</title>
      <link>/articles/steganography/steganography/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/articles/steganography/steganography/</guid>
      <description>Hiding in plain sight has many dimensions. Sometimes, whatever you are looking for is before you, but you cannot see it; other times, it‚Äôs right before you but you don‚Äôt notice.
Steganography has been an art since the ancient days used to write hidden messages. It has evolved over the ages, and has changed form for the better. Nowadays we have software to hide and obfuscate messages. In this article, we‚Äôll take a look at some amazing steganographic tools which are tiny yet powerful.</description>
      <content>&lt;p&gt;Hiding in plain sight has many dimensions. Sometimes, whatever you
are looking for is before you, but you cannot see it; other times,
it‚Äôs right before you but you don‚Äôt notice.&lt;/p&gt;
&lt;p&gt;Steganography has been an art since the &lt;a href=&#34;https://en.wikipedia.org/wiki/Steganography#History&#34;&gt;ancient&lt;/a&gt; days used to write
hidden messages. It has evolved over the ages, and has changed form
for the better. Nowadays we have software to hide and obfuscate
messages. In this article, we‚Äôll take a look at some amazing
steganographic tools which are tiny yet powerful.&lt;/p&gt;
&lt;h1 id=&#34;steghide&#34;&gt;Steghide&lt;/h1&gt;
&lt;p&gt;Steghide is one of the most popular steganographic tools out there.
It comes preinstalled in some of the GNU/Linux distributions. If
it‚Äôs not installed, you can download it from your package manager or
you can check their &lt;a href=&#34;https://github.com/StefanoDeVuono/steghide&#34;&gt;Github&lt;/a&gt;. It can hide data inside images and audio
files, it supports JPEG, BMP, WAV and AU formats.&lt;/p&gt;
&lt;p&gt;Let‚Äôs create a text file named secret.txt and try to hide it inside
an image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;steghide embed -cf yoda.jpg -ef secret.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here -cf is cover file and -ef is embed file. The caveat is, you
should make sure your cover file is larger than your embed file,
that‚Äôs a no brainer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/2.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now let‚Äôs delete the secret.txt and see if we can extract it back
from the cover file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;steghide extract -sf yoda.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/articles/steganography/3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here the -sf is stego file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/4.png&#34; alt=&#34;4&#34;&gt;&lt;/p&gt;
&lt;p&gt;Our secret.txt is extracted. Wanna see what‚Äôs inside?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/5.png&#34; alt=&#34;5&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;strings&#34;&gt;Strings&lt;/h1&gt;
&lt;p&gt;Let‚Äôs digress from the topic a bit. Strings is a command line tool
that helps to display printable strings in a file. In a sense, it‚Äôs
just like cat command. If you didn‚Äôt know already, now it‚Äôs a chance
to explore it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/6.png&#34; alt=&#34;6&#34;&gt;&lt;/p&gt;
&lt;p&gt;strings can be super helpful in steganographic challenges. For
instance, let‚Äôs say, a flag or password is embedded inside an image
file. And you have to match or put printable strings together in
order to solve the challenge.&lt;/p&gt;
&lt;p&gt;If you cat out the file, you will end up with gibberish characters
printed out on to your screen.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat yoda.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/articles/steganography/7.png&#34; alt=&#34;7&#34;&gt;&lt;/p&gt;
&lt;p&gt;Whereas, if you use strings, you‚Äôll get a bunch of strings with
printable characters.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;strings yoda.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/articles/steganography/8.png&#34; alt=&#34;8&#34;&gt;&lt;/p&gt;
&lt;p&gt;Among them, one of it might be your password or flag or a clue to
the next stage.&lt;/p&gt;
&lt;h1 id=&#34;exiftool&#34;&gt;Exiftool&lt;/h1&gt;
&lt;p&gt;Exif is a good place to hide your secret message. Exiftool helps to
view the information about metadata of images or files. Besides,
embedding secret messages, exif data could provide some juicy
information about the image, such as, geo coordinates, camera model,
creation date and so on. You can use simple tools like gThumb or
GIMP to edit medtadata.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;exiftool yoda.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/articles/steganography/9.png&#34; alt=&#34;9&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;binwalk&#34;&gt;Binwalk&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kali.org/tools/binwalk/&#34;&gt;Binwalk&lt;/a&gt; is a tool for searching binary images for embedded files and
executable code. It is actually a forensic tool, which helps to
analyse and audit binaries. It gives plenty of options to tinker
around binary files. Let‚Äôs see couple of options.&lt;/p&gt;
&lt;p&gt;Here we have source code of a web page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/10.png&#34; alt=&#34;10&#34;&gt;&lt;/p&gt;
&lt;p&gt;It just displays the embedded data in a given file.
If you want to extract the data from a binary, use -e flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/11.png&#34; alt=&#34;11&#34;&gt;&lt;/p&gt;
&lt;p&gt;The file is extracted to _OpenShot-v2.6.1-x86_64.AppImage.extracted
folder.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/12.png&#34; alt=&#34;12&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;wavsteg&#34;&gt;Wavsteg&lt;/h1&gt;
&lt;p&gt;WavSteg is a tool written in Python, which can hide data in files
with a wav format.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stegolsb wavsteg -h -i piano.wav -s secret.txt -o stego.wav -n 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/articles/steganography/13.png&#34; alt=&#34;13&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/14.png&#34; alt=&#34;14&#34;&gt;&lt;/p&gt;
&lt;p&gt;While extracting data, you have to specify the exact size of
embedded file(secret.txt) in bytes&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/articles/steganography/15.png&#34; alt=&#34;15&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;other-useful-resources&#34;&gt;Other Useful Resources&lt;/h1&gt;
&lt;p&gt;There are many online tools and professional software that could
facilitate steganography. Some of them are in the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.dcode.fr/&#34;&gt;decode.fr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.audacityteam.org/&#34;&gt;Audacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Paradoxis/StegCracker&#34;&gt;StegCracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zed-0xff/zsteg&#34;&gt;Zsteg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/korczis/foremost&#34;&gt;Foremost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/eugenekolo/sec-tools/tree/master/stego/stegsolve/stegsolve&#34;&gt;Stegsolve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sonicvisualiser.org/&#34;&gt;Sonic Visualiser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
